# @format

name: Web UI Docker Build and Deploy

permissions:
  contents: read
  id-token: write

on:
  workflow_run:
    workflows: ['Java CI with Maven']
    types:
      - completed
    branches: ['main']
  workflow_dispatch:

jobs:
  check-code-changes:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success'
    outputs:
      code-changed: ${{ steps.changes.outputs.dependencies }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha || github.sha }}
          fetch-depth: 2

      - name: Check for web-ui and chat code changes
        id: changes
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "dependencies=true" >> $GITHUB_OUTPUT
            echo "Manual trigger detected, proceeding with Docker build"
          else
            # Get the commit that triggered the original workflow
            TRIGGER_SHA="${{ github.event.workflow_run.head_sha }}"
            echo "Checking for web-ui and chat code changes in commit: $TRIGGER_SHA"
            
            # Check if any web-ui or chat code files changed in the triggering commit
            if git diff --name-only $TRIGGER_SHA~1 $TRIGGER_SHA | grep -E "^(web-ui|chat)/"; then
              echo "dependencies=true" >> $GITHUB_OUTPUT
              echo "Web-ui or chat code changed, proceeding with Docker build"
              echo "Changed files:"
              git diff --name-only $TRIGGER_SHA~1 $TRIGGER_SHA | grep -E "^(web-ui|chat)/"
            else
              echo "dependencies=false" >> $GITHUB_OUTPUT
              echo "No web-ui or chat code changes detected, skipping Docker build"
            fi
          fi

  build-and-deploy:
    needs: check-code-changes
    if: needs.check-code-changes.outputs.code-changed == 'true'
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha || github.sha }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Log in to Azure Container Registry
        run: az acr login --name schoollawregistry

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: schoollawregistry.azurecr.io/compliance-ui
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        env:
          NEXT_PUBLIC_HOSTNAME: ${{ secrets.NEXT_PUBLIC_HOSTNAME }}
          NEXT_PUBLIC_LOG_LEVEL_CLIENT: ${{ secrets.NEXT_PUBLIC_LOG_LEVEL_CLIENT }}
          NEXT_PUBLIC_DATAGRID_CLIENT_CACHE_TIMEOUT: ${{ secrets.NEXT_PUBLIC_DATAGRID_CLIENT_CACHE_TIMEOUT }}
          NEXT_PUBLIC_DEFAULT_AI_MODEL: ${{ secrets.NEXT_PUBLIC_DEFAULT_AI_MODEL }}
        with:
          context: ./web-ui
          file: ./web-ui/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          secrets: |
            "NEXT_PUBLIC_MUI_LICENSE=${{ variables.NEXT_PUBLIC_MUI_LICENSE }}"            
            "NEXT_PUBLIC_AZURE_APPLICATIONINSIGHTS_CONNECTION_STRING=${{ variables.NEXT_PUBLIC_AZURE_APPLICATIONINSIGHTS_CONNECTION_STRING }}"
