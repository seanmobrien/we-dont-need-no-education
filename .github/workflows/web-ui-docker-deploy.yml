# @format

name: Web UI Docker Build and Deploy

permissions:
  contents: read
  id-token: write

on:
  workflow_run:
    workflows: ['Java CI with Maven']
    types:
      - completed
    branches: ['main']  
  workflow_dispatch:
  
jobs:
  build-and-deploy:
    if: github.event_name == 'deployment' || github.event.workflow_run.conclusion == 'success'
    environment: Production
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_MUI_LICENSE: ${{ secrets.NEXT_PUBLIC_MUI_LICENSE }}
      NEXT_PUBLIC_AZURE_APPLICATIONINSIGHTS_CONNECTION_STRING: ${{ secrets.NEXT_PUBLIC_AZURE_MONITOR_CONNECTION_STRING }}
      NEXT_PUBLIC_AZURE_MONITOR_CONNECTION_STRING: ${{ secrets.NEXT_PUBLIC_AZURE_MONITOR_CONNECTION_STRING }}
      AZURE_MONITOR_CONNECTION_STRING: ${{ secrets.NEXT_PUBLIC_AZURE_MONITOR_CONNECTION_STRING }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha || github.sha }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Log in to Azure Container Registry
        run: az acr login --name schoollawregistry

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: schoollawregistry.azurecr.io/compliance-ui
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./web-ui
          file: ./web-ui/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}          
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NEXT_PUBLIC_DEFAULT_AI_MODEL=${{ vars.NEXT_PUBLIC_DEFAULT_AI_MODEL }}
            NEXT_PUBLIC_HOSTNAME=${{ vars.NEXT_PUBLIC_HOSTNAME }}
            NEXT_PUBLIC_LOG_LEVEL_CLIENT=${{ vars.NEXT_PUBLIC_LOG_LEVEL_CLIENT }}
            OTEL_SERVICE_NAME=${{ vars.OTEL_SERVICE_NAME }}
            OTEL_RESOURCE_ATTRIBUTES=${{ vars.OTEL_RESOURCE_ATTRIBUTES }}
            
            AZURE_OPENAI_ENDPOINT=${{ vars.AZURE_OPENAI_ENDPOINT }}
            AZURE_AISEARCH_ENDPOINT=${{ vars.AZURE_AISEARCH_ENDPOINT }}
            AZURE_AISEARCH_DOCUMENTS_INDEX_NAME=${{ vars.AZURE_AISEARCH_DOCUMENTS_INDEX_NAME }}
            AZURE_AISEARCH_POLICY_INDEX_NAME=${{ vars.AZURE_AISEARCH_POLICY_INDEX_NAME }}
            AZURE_STORAGE_ACCOUNT_NAME=${{ vars.AZURE_STORAGE_ACCOUNT_NAME }}
            MEM0_UI_HOST=${{ vars.MEM0_UI_HOST }}
            MEM0_USERNAME=${{ vars.MEM0_USERNAME }}                                    
            MEM0_API_HOST=${{ vars.MEM0_API_HOST }}
          secrets: |
            AUTH_GOOGLE_ID=${{ secrets.AUTH_GOOGLE_ID }}
            AZURE_STORAGE_CONNECTION_STRING=${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
            NEXT_PUBLIC_MUI_LICENSE=${{ secrets.NEXT_PUBLIC_MUI_LICENSE }}
            NEXT_PUBLIC_AZURE_APPLICATIONINSIGHTS_CONNECTION_STRING=${{ secrets.NEXT_PUBLIC_AZURE_MONITOR_CONNECTION_STRING }}
            REDIS_URL=${{ secrets.REDIS_URL }}
            REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}            
            AZURE_API_KEY=${{ secrets.AZURE_API_KEY }}
            AZURE_AISEARCH_KEY=${{ secrets.AZURE_AISEARCH_KEY }}
            AUTH_GOOGLE_SECRET=${{ secrets.AUTH_GOOGLE_SECRET }}
            AUTH_GOOGLE_APIKEY=${{ secrets.AUTH_GOOGLE_APIKEY }}
            AZURE_STORAGE_ACCOUNT_KEY=${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}
      
      - name: Deploy to container
        uses: azure/container-apps-deploy-action@v1
        with:
          #appSourcePath: ${{ github.workspace }}/src
          imageToDeploy: schoollawregistry.azurecr.io/compliance-ui:${{ github.sha }}  
          acrName: schoollawregistry
          containerAppName: full-ui
          resourceGroup: SchoolLawyer
