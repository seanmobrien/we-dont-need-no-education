# @format

name: Web UI Docker Build and Deploy

permissions:
  contents: read
  id-token: write

on:
  workflow_run:
    workflows: ['Java CI with Maven']
    types:
      - completed
    branches: ['main']  
  workflow_dispatch:
  
jobs:
  build-and-deploy:
    if: (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') || github.event_name == 'workflow_dispatch'
    environment: Production
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_MUI_LICENSE: ${{ secrets.NEXT_PUBLIC_MUI_LICENSE }}
      NEXT_PUBLIC_AZURE_APPLICATIONINSIGHTS_CONNECTION_STRING: ${{ secrets.NEXT_PUBLIC_AZURE_MONITOR_CONNECTION_STRING }}
      NEXT_PUBLIC_AZURE_MONITOR_CONNECTION_STRING: ${{ secrets.NEXT_PUBLIC_AZURE_MONITOR_CONNECTION_STRING }}
      AZURE_MONITOR_CONNECTION_STRING: ${{ secrets.NEXT_PUBLIC_AZURE_MONITOR_CONNECTION_STRING }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha || github.sha }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Log in to Azure Container Registry
        run: az acr login --name schoollawregistry

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: schoollawregistry.azurecr.io/compliance-ui
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./web-ui
          file: ./web-ui/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}          
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NEXT_PUBLIC_DEFAULT_AI_MODEL=${{ vars.NEXT_PUBLIC_DEFAULT_AI_MODEL }}
            NEXT_PUBLIC_HOSTNAME=${{ vars.NEXT_PUBLIC_HOSTNAME }}
            NEXT_PUBLIC_LOG_LEVEL_CLIENT=${{ vars.NEXT_PUBLIC_LOG_LEVEL_CLIENT }}
            NEXT_PUBLIC_FLAGSMITH_API_URL=${{ vars.NEXT_PUBLIC_FLAGSMITH_API_URL }}            
            NEXT_PUBLIC_FLAGSMITH_ENVIRONMENT_ID=${{ vars.NEXT_PUBLIC_FLAGSMITH_ENVIRONMENT_ID }}            
            OTEL_SERVICE_NAME=${{ vars.OTEL_SERVICE_NAME }}
            OTEL_RESOURCE_ATTRIBUTES=${{ vars.OTEL_RESOURCE_ATTRIBUTES }}
            AZURE_OPENAI_ENDPOINT=${{ vars.AZURE_OPENAI_ENDPOINT }}
            AZURE_AISEARCH_ENDPOINT=${{ vars.AZURE_AISEARCH_ENDPOINT }}
            AZURE_AISEARCH_DOCUMENTS_INDEX_NAME=${{ vars.AZURE_AISEARCH_DOCUMENTS_INDEX_NAME }}
            AZURE_AISEARCH_POLICY_INDEX_NAME=${{ vars.AZURE_AISEARCH_POLICY_INDEX_NAME }}
            AZURE_STORAGE_ACCOUNT_NAME=${{ vars.AZURE_STORAGE_ACCOUNT_NAME }}
            MEM0_UI_HOST=${{ vars.MEM0_UI_HOST }}
            MEM0_USERNAME=${{ vars.MEM0_USERNAME }}                                    
            MEM0_API_HOST=${{ vars.MEM0_API_HOST }}
          secrets: |
            AUTH_GOOGLE_ID=${{ secrets.AUTH_GOOGLE_ID }}
            AZURE_STORAGE_CONNECTION_STRING=${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
            NEXT_PUBLIC_MUI_LICENSE=${{ secrets.NEXT_PUBLIC_MUI_LICENSE }}
            AZURE_APPLICATIONINSIGHTS_CONNECTION_STRING=${{ secrets.NEXT_PUBLIC_AZURE_MONITOR_CONNECTION_STRING }}
            REDIS_URL=${{ secrets.REDIS_URL }}
            REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}            
            AZURE_API_KEY=${{ secrets.AZURE_API_KEY }}
            AZURE_AISEARCH_KEY=${{ secrets.AZURE_AISEARCH_KEY }}
            AUTH_GOOGLE_SECRET=${{ secrets.AUTH_GOOGLE_SECRET }}
            AUTH_GOOGLE_APIKEY=${{ secrets.AUTH_GOOGLE_APIKEY }}
            AZURE_STORAGE_ACCOUNT_KEY=${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}
            FLAGSMITH_SDK_KEY=${{ secrets.FLAGSMITH_SDK_KEY }}
            OPENID_KEY_TEXT=${{ secrets.OPENID_KEY_TEXT }}

      - name: Set deploy image tag
        id: deploy_tag
        run: |
          DEPLOY_TAG=$(echo "${{ steps.meta.outputs.tags }}" | grep "${GITHUB_REF_NAME}-${GITHUB_SHA::7}" | head -n1)
          echo "DEPLOY_TAG=$DEPLOY_TAG" >> $GITHUB_ENV
      
      - name: Deploy to container
        uses: azure/container-apps-deploy-action@v1
        with:
          #appSourcePath: ${{ github.workspace }}/src
          # Use env.DEPLOY_TAG set in previous step, not vars.*
          imageToDeploy: ${{ env.DEPLOY_TAG }}
          acrName: schoollawregistry
          containerAppName: full-ui
          resourceGroup: SchoolLawyer          
          environmentVariables: AUTH_SECRET=secretref:auth-secret AUTH_GOOGLE_ID=secretref:auth-google-id AUTH_GOOGLE_SECRET=secretref:auth-google-secret AUTH_GOOGLE_APIKEY=secretref:auth-google-apikey AUTH_MICROSOFT_ENTRA_ID_ID=secretref:auth-microsoft-entra-id-id AUTH_MICROSOFT_ENTRA_ID_SECRET=secretref:auth-microsoft-entra-id-secret AUTH_KEYCLOAK_ISSUER=${{ vars.AUTH_KEYCLOAK_ISSUER }} AUTH_KEYCLOAK_IMPERSONATOR_USERNAME=secretref:auth-keycloak-impersonator-username AUTH_KEYCLOAK_IMPERSONATOR_PASSWORD=secretref:auth-keycloak-impersonator-password AZURE_API_KEY=secretref:azure-api-key AZURE_AISEARCH_KEY=secretref:azure-aisearch-key AZURE_OPENAI_ENDPOINT=${{ vars.AZURE_OPENAI_ENDPOINT }} AZURE_OPENAI_DEPLOYMENT_EMBEDDING=${{ vars.AZURE_OPENAI_DEPLOYMENT_EMBEDDING }} AZURE_OPENAI_KEY_EMBEDDING=secretref:azure-openai-key-embedding AZURE_AISEARCH_ENDPOINT=${{ vars.AZURE_AISEARCH_ENDPOINT }} AZURE_AISEARCH_DOCUMENTS_INDEX_NAME=${{ vars.AZURE_AISEARCH_DOCUMENTS_INDEX_NAME }} AZURE_AISEARCH_POLICY_INDEX_NAME=${{ vars.AZURE_AISEARCH_POLICY_INDEX_NAME }} AZURE_MONITOR_CONNECTION_STRING=secretref:azure-monitor-connection-string NEXT_PUBLIC_AZURE_MONITOR_CONNECTION_STRING=secretref:next-public-azure-monitor-connection-string AZURE_STORAGE_CONNECTION_STRING=secretref:azure-storage-connection-string AZURE_STORAGE_ACCOUNT_NAME=${{ vars.AZURE_STORAGE_ACCOUNT_NAME }} AZURE_STORAGE_ACCOUNT_KEY=secretref:azure-storage-account-key CRYPTO_KEYS_EC_P521_PRIVATE=secretref:crypto-keys-ec-p521-private CRYPTO_KEYS_EC_P521_PUBLIC=secretref:crypto-keys-ec-p521-public CRYPTO_KEYS_RSA_4096_PRIVATE=secretref:crypto-keys-rsa-4096-private CRYPTO_KEYS_RSA_4096_PUBLIC=secretref:crypto-keys-rsa-4096-public DATABASE_URL=secretref:database-url NEXT_PUBLIC_FLAGSMITH_API_URL=${{ vars.NEXT_PUBLIC_FLAGSMITH_API_URL }} NEXT_PUBLIC_FLAGSMITH_ENVIRONMENT_ID=${{ vars.NEXT_PUBLIC_FLAGSMITH_ENVIRONMENT_ID }} FLAGSMITH_SDK_KEY=secretref:flagsmith-sdk-key GOOGLE_GENERATIVE_AI_API_KEY=secretref:google-generative-ai-api-key LOG_LEVEL_SERVER=${{ vars.LOG_LEVEL_SERVER }} NEXT_PUBLIC_LOG_LEVEL_CLIENT=${{ vars.NEXT_PUBLIC_LOG_LEVEL_CLIENT }} MEM0_DISABLED=${{ vars.MEM0_DISABLED }} MEM0_API_HOST=${{ vars.MEM0_API_HOST }} MEM0_USERNAME=${{ vars.MEM0_USERNAME }} MEM0_PROJECT_ID=${{ vars.MEM0_PROJECT_ID }} MEM0_UI_HOST=${{ vars.MEM0_UI_HOST }} NEXT_PUBLIC_MUI_LICENSE=${{ vars.NEXT_PUBLIC_MUI_LICENSE }} NEXT_PUBLIC_HOSTNAME=${{ vars.NEXT_PUBLIC_HOSTNAME }} NEXT_TELEMETRY_DISABLED=${{ vars.NEXT_TELEMETRY_DISABLED }} OPENAI_KEY_TEXT=secretref:openai-key-text OTEL_LOG_LEVEL=${{ vars.OTEL_LOG_LEVEL }} OTEL_SERVICE_NAME=${{ vars.OTEL_SERVICE_NAME }} OTEL_RESOURCE_ATTRIBUTES=${{ vars.OTEL_RESOURCE_ATTRIBUTES }} REDIS_URL=secretref:redis-url REDIS_PASSWORD=secretref:redis-password AUTH_KEYCLOAK_CLIENT_ID=secretref:auth-keycloak-client-id AUTH_KEYCLOAK_CLIENT_SECRET=secretref:auth-keycloak-client-secret AUTH_TRUST_HOST=true


